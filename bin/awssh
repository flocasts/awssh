
source $(dirname ${BASH_SOURCE[0]})/../config/config.cfg

openURL() {
	if which xdg-open > /dev/null
	then
		xdg-open $1
	elif which gnome-open > /dev/null
	then
		gnome-open $1
	else
		open -a "Google Chrome" $1
	fi
}

extract_parameters() {
	OIFS=$IFS
	IFS=";"
	all_parameters=($parameters)
	IFS=$OIFS
	
	OIFS=$IFS
	IFS=","
	current_parameters=(${all_parameters[$1]})
	IFS=$OIFS

	echo "${current_parameters[@]}"
}

check_aws_config() {
	if [ ! -f $HOME/.aws/credentials ]; then
		echo -n -e "${RED}Looks like you need to setup your AWS cli config. Do you need help setting up your aws access keys [y/n]${DEFAULT}?"
		read -n 1 answer
		if [[ $answer =~ ^[Yy]$ ]]; then
			url="http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-set-up.html#d0e2016"
			echo
			echo -e "${BLUE}Opening ${BOLD}${url}${RESET}"
			sleep 3;
			openURL $url
		fi
			aws configure set output json
			aws configure set region us-west-2
			aws configure
	fi
}

sub_list() {
	OIFS=$IFS
	IFS=";"
	running_instances=($(aws $profile ec2 describe-instances --output json --filter "Name=instance-state-name,Values=running" | jq '[ .Reservations[].Instances[0].Tags[] | select(.Key | startswith("Name")) | .Value ]' | jq --raw-output 'sort | join(";")'))
	IFS=$OIFS
	if [[ $competion_override == true ]]; then
		echo ${running_instances[@]}
		exit
	fi
	echo -e "${YELLOW}${BOLD}Here are your running instances:${RESET}${GREEN}"
	echo

	for i in ${running_instances[*]}
	do
		echo $i;
	done
	echo -e "${RESET}"
	exit;
}

sub_login() {
	if [ -z ${parameters[0]} ]; then
		echo -e "\033[31m\033[1mYou must specify an instance name!!!\033[0m\033[39m"
		exit 1;
	fi

	instance_name=${parameters[0]}

	json=$( aws $profile ec2 describe-instances --output json --filter "Name=tag:Name,Values=$instance_name" "Name=instance-state-name,Values=running" | $jq2 '.Reservations[0].Instances[0]' )

	public_dns=$( echo "$json" | $jq2 -r '.PublicDnsName' )

	ssh -i $key ec2-user@$public_dns
	exit;
}

while (( "$#" )); 
do
	case "$1" in
		# Overrides the default profile
		-p | --profile)
		profile="--profile $2"
		shift 2
		;;
		# Overrides your pem key
		-k | --key)
		key="$2" 
		shift 2
		;;
		--competion-override)
		competion_override=true
		shift
		;;
		--) # End of all options
		shift
		break;
		;;
		-*)
		# Sets unknown option
		echo "Error: Unknown option: $1" >&2
		exit 1
		;;
		*)  # No more options
		if [[ "$(type -t sub_$1)" == "function" ]]; then
			if [[ ${functions[*]} > 1 ]]; then
				parameters+=';'
				OIFS=$IFS
			fi
			functions+=("$1")
		else
			if [ ! -z $parameters ] && [[ "${parameters: -1}" != ";" ]]; then 
				parameters+=','
			fi
			parameters+="$1"
		fi
		shift
		;;
	esac
done

check_aws_config

for f in ${!functions[@]}
do
	function_parameters=$(extract_parameters $f)
	sub_${functions[$f]} ${function_parameters[@]}
done